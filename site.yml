#!/usr/local/bin/ansible-playbook --inventory=inventory

- name: ' Konductor UPI '
  hosts: local
  vars:
    module: "build"
    state_provider: "local"
    tf_module_path: "{{ dir_terraform }}/shaman"
    vars_module_path: "{{ dir_terraform }}"
    ansible_name_module: " Konductor | UPI | {{ module }}"
  vars_files:
    - vars/global.yml

  tasks:

    - name: '{{ ansible_name_module }} | file | Create ~/.aws'
      file:
        path: "/root/.aws"
        state: directory

          ####### Stage Variables & AWS Creds
    - name: '{{ ansible_name_module }} | template | Terraform Vars & aws credentials'
      template:
        src: "{{ item.name }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      loop:
        - { mode: '755', name: "templates/terraform/global.tfvars.j2", dest: "{{ tf_module_path }}/global.tfvars"}
        - { mode: '600', name: "templates/aws/credentials.j2", dest: "{{ local_home }}/.aws/credentials"}

    ####### Symlinks
    - name: '{{ ansible_name_module }} | variable | Create variable symlink'
      file:
        src: "{{ tf_module_path }}/variables.tf"
        dest: "{{ item }}"
        state: link
      loop:
        - "{{ tf_module_path }}/elb/variables.tf"
        - "{{ tf_module_path }}/control-plane/variables.tf"

    ####### Terraform Init
    - name: '{{ ansible_name_module }} | shell | terraform init'
      shell: terraform init
      loop:
        - "{{ tf_module_path }}/elb"
        - "{{ tf_module_path }}/control-plane"

    ####### Terraform Apply
    - name: '{{ ansible_name_module }} | terraform | apply'
      terraform:
        project_path: "{{ item }}"
        variables_file: "{{ vars_module_path }}/global.tfvars"
        state: present
      loop:
        - "{{ tf_module_path }}/elb"
        - "{{ tf_module_path }}/control-plane"
      register: tf_output
